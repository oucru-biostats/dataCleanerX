// CSSGlobalVariables 1.0.1 - github.com/colxi/css-global-variables/
window.CSSGlobalVariables=(function(){'use strict';let n=document;let a=0;return function(p,q,o){if(!(this instanceof window.CSSGlobalVariables))throw new Error('calling CSSGlobalVariables constructor without new is forbidden');const b={};const c={};function m(p,q,o){if(typeof p==='object')Object.assign(b,p);else{b.filterSelector=p;b.autoPrefix=q;b.declareGlobal=o}
if(typeof b.filterSelector==='undefined')b.filterSelector=!1;if(typeof b.autoPrefix==='undefined')b.autoPrefix=!0;if(typeof b.declareGlobal==='undefined')b.declareGlobal='__cssGlobals__';if(typeof b.filterSelector!=='string'&&b.filterSelector!==!1)throw new Error('"filterSelector" parameter must be a String or false');if(typeof b.autoPrefix!=='boolean')throw new Error('"autoPrefix" parameter must be a Boolean');if(typeof b.declareGlobal!=='string'&&b.declareGlobal!==!1)throw new Error('"declareGlobal" parameter must be a String or false');if(b.declareGlobal){Object.defineProperty(window,b.declareGlobal,{get:function(){d();return e},configurable:!0})}
if(b.filterSelector){try{n.querySelectorAll(b.filterSelector)}
catch(e){throw new Error('Provided "filterSelector" is an invalid selector ("'+p+'")')}}
a++;b.id=a;return}
const e=new Proxy(c,{get:function(h,g){d();g=f(g);return Reflect.get(h,g)},set:function(h,g,i){d();g=f(g);i=String(i);n.documentElement.style.setProperty(g,i);Reflect.set(h,g,i)},deleteProperty:function(){d();return!1},ownKeys:function(h){d();return Reflect.ownKeys(h)},has:function(h,g){d();g=f(g);return Reflect.has(h,g)},defineProperty:function(h,g,attr){d();g=f(g);if(typeof attr==='object'&&attr.hasOwnProperty('i')){let i=String(attr.i);n.documentElement.style.setProperty(g,i);Reflect.set(h,g,i)}
return h},getOwnPropertyDescriptor:function(h,g){d();g=f(g);return Reflect.getOwnPropertyDescriptor(h,g)}});function f(g=''){g=String(g);if(g.substring(0,2)!=='--'){if(b.autoPrefix)g='--'+g;else throw new Error('Invalid CSS Variable name. Name must start with "--" (autoPrefix=false)')}
return g}
function d(){[].slice.call(n.styleSheets).reduce((j,k)=>{if(b.filterSelector){let s=n.querySelectorAll(b.filterSelector);let isSelected=!1;for(let i in s)if(s.hasOwnProperty(i)&&k.ownerNode===s[i]){isSelected=!0}
if(!isSelected)return}
let ids=k.ownerNode.getAttribute('css-global-vars-id');if(String(ids).split(',').includes(String(b.id)))return;else{let i=k.ownerNode.getAttribute('css-global-vars-id');if(i===null||i==='')i=b.id;else i+=','+b.id;k.ownerNode.setAttribute('css-global-vars-id',i)}
if(!k.cssRules)return;else return j+[].slice.call(k.cssRules).reduce((j,l)=>{if(l.selectorText===':root'){let css=l.cssText.split('{');css=css[1].replace('}','').split(';');for(let i=0;i<css.length;i++){let prop=css[i].split(':');if(prop.length===2&&prop[0].indexOf('--')===1){c[prop[0].trim()]=prop[1].trim()}}}},'')},'');for(let p in c){if(c.hasOwnProperty(p)){c[p]=window.getComputedStyle(n.documentElement,null).getPropertyValue(p).trim()}}
return!0}
m(p,q,o);d();return e}})()
